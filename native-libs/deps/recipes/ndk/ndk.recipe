# This recipe contains the setup tasks for unpacking and installing the NDK
inherit common

version="r23b"

# Select the correct NDK version for the host system:
case $(uname -sm) in
"Linux x86_64")
    system=linux
    fileName="android-ndk-$version-$system.zip"
    source="https://dl.google.com/android/repository/$fileName#f47ec4c4badd11e9f593a8450180884a927c330d" ;;
"Darwin x86_64" | "Darwin arm64")
    system=darwin
    fileName="android-ndk-$version-$system.dmg"
    source="https://dl.google.com/android/repository/$fileName#e67c17f9763d160368383f05446d605e9e533195" ;;
*)
    echo "Unknown host platform!"
    exit 1;;
esac

# Unzip the NDK archive.
unzip_ndk() {
    echo Unpacking NDK...
    archive="$download_dir/$fileName"

    if [ $system = darwin ]; then
        hdiutil attach $archive -mountpoint "$work_dir/dmg"
        app=$(echo $work_dir/dmg/Android*.app)
        cp -r "$app/Contents/NDK/" "$work_dir/android-ndk-$version"
        hdiutil detach "$work_dir/dmg"
    else
        unzip -o -d"$work_dir" $archive
    fi
}
task unzip-ndk download

# Extracts a standalone toolchain from the NDK.
# $1 arch name for installing the toolchain.
setup() {
    echo Unpacking toolchain...
    cd android-ndk-$version
    python build/tools/make_standalone_toolchain.py --verbose --arch $1 --api 21 --stl libc++ --force --install-dir $work_dir/$1

    echo Patching headers...
    cat $recipe_dir/langinfo.h >> $work_dir/$1/sysroot/usr/local/include/langinfo.h
}
setup_arm() {
    setup arm
}
setup_arm64() {
    setup arm64
}
setup_x86() {
    setup x86
}
setup_x86_64() {
    setup x86_64
}
task setup-arm unzip-ndk
task setup-arm64 unzip-ndk
task setup-x86 unzip-ndk
task setup-x86_64 unzip-ndk
default=setup-arm
